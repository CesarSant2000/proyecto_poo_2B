/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package final_poo;

import java.awt.event.ItemEvent;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Set;
import javax.swing.JOptionPane;

/**
 *
 * @author Cesar J. Santacruz
 */
public class GestionAmbas extends javax.swing.JFrame {

    ArrayList<Tiendas> tiendas = new ArrayList<>();
    ArrayList<Producto> productosDeseados = new ArrayList<>();

    public GestionAmbas(ArrayList<Tiendas> tiendas) {
        initComponents();
        this.tiendas = tiendas;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGroupEAlmacenamient = new javax.swing.ButtonGroup();
        btnGroupEProcesador = new javax.swing.ButtonGroup();
        btnGroupVentilacion = new javax.swing.ButtonGroup();
        btnGroupLProcesador = new javax.swing.ButtonGroup();
        btnGroupLAlmacenamiento = new javax.swing.ButtonGroup();
        btnGroupBateria = new javax.swing.ButtonGroup();
        btnInicio = new javax.swing.JButton();
        cbxActivar2 = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        panelEProcesador = new javax.swing.JPanel();
        rbtnEi7 = new javax.swing.JRadioButton();
        rbtnEi5 = new javax.swing.JRadioButton();
        rbtnEi3 = new javax.swing.JRadioButton();
        panelVentilacion = new javax.swing.JPanel();
        rbtnVentilador = new javax.swing.JRadioButton();
        rbtnLiquida = new javax.swing.JRadioButton();
        panelRam = new javax.swing.JPanel();
        cmbRam = new javax.swing.JComboBox<>();
        panelAlmacenamiento = new javax.swing.JPanel();
        rbtnHDD = new javax.swing.JRadioButton();
        rbtnSSD = new javax.swing.JRadioButton();
        panelFuente = new javax.swing.JPanel();
        cmbFuente = new javax.swing.JComboBox<>();
        panelEProcesador1 = new javax.swing.JPanel();
        rbtnE7 = new javax.swing.JRadioButton();
        rbtnE5 = new javax.swing.JRadioButton();
        rbtnE9 = new javax.swing.JRadioButton();
        cbxActivar3 = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        panelBateria = new javax.swing.JPanel();
        rbtnBSi = new javax.swing.JRadioButton();
        rbtnBNo = new javax.swing.JRadioButton();
        panelRamL = new javax.swing.JPanel();
        cmbRAM = new javax.swing.JComboBox<>();
        panelAlmacenamientoL = new javax.swing.JPanel();
        rbtnHDDL = new javax.swing.JRadioButton();
        rbtnSSDL = new javax.swing.JRadioButton();
        panelLProcesador = new javax.swing.JPanel();
        rbtnLi7 = new javax.swing.JRadioButton();
        rbtnLi5 = new javax.swing.JRadioButton();
        rbtnLi3 = new javax.swing.JRadioButton();
        panelLProcesador1 = new javax.swing.JPanel();
        rbtnL7 = new javax.swing.JRadioButton();
        rbtnL5 = new javax.swing.JRadioButton();
        rbtnL9 = new javax.swing.JRadioButton();
        jPanel6 = new javax.swing.JPanel();
        cmbProvincias = new javax.swing.JComboBox<>();
        btnCotizar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Parts & Bits");

        btnInicio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/home.png"))); // NOI18N
        btnInicio.setMaximumSize(new java.awt.Dimension(50, 50));
        btnInicio.setMinimumSize(new java.awt.Dimension(50, 50));
        btnInicio.setOpaque(false);
        btnInicio.setPreferredSize(new java.awt.Dimension(50, 50));
        btnInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInicioActionPerformed(evt);
            }
        });

        cbxActivar2.setText("Activar");
        cbxActivar2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxActivar2ItemStateChanged(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Escritorio"));

        panelEProcesador.setBorder(javax.swing.BorderFactory.createTitledBorder("Procesador Intel"));
        panelEProcesador.setEnabled(false);

        btnGroupEProcesador.add(rbtnEi7);
        rbtnEi7.setText("i7");
        rbtnEi7.setEnabled(false);

        btnGroupEProcesador.add(rbtnEi5);
        rbtnEi5.setText("i5");
        rbtnEi5.setEnabled(false);

        btnGroupEProcesador.add(rbtnEi3);
        rbtnEi3.setText("i3");
        rbtnEi3.setEnabled(false);

        javax.swing.GroupLayout panelEProcesadorLayout = new javax.swing.GroupLayout(panelEProcesador);
        panelEProcesador.setLayout(panelEProcesadorLayout);
        panelEProcesadorLayout.setHorizontalGroup(
            panelEProcesadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEProcesadorLayout.createSequentialGroup()
                .addGroup(panelEProcesadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbtnEi7)
                    .addComponent(rbtnEi5)
                    .addComponent(rbtnEi3))
                .addGap(0, 61, Short.MAX_VALUE))
        );
        panelEProcesadorLayout.setVerticalGroup(
            panelEProcesadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEProcesadorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rbtnEi7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbtnEi5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbtnEi3)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        panelVentilacion.setBorder(javax.swing.BorderFactory.createTitledBorder("Tipo de ventilacion"));
        panelVentilacion.setEnabled(false);

        btnGroupVentilacion.add(rbtnVentilador);
        rbtnVentilador.setText("Ventilador");
        rbtnVentilador.setEnabled(false);

        btnGroupVentilacion.add(rbtnLiquida);
        rbtnLiquida.setText("Liquida");
        rbtnLiquida.setEnabled(false);

        javax.swing.GroupLayout panelVentilacionLayout = new javax.swing.GroupLayout(panelVentilacion);
        panelVentilacion.setLayout(panelVentilacionLayout);
        panelVentilacionLayout.setHorizontalGroup(
            panelVentilacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelVentilacionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelVentilacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbtnVentilador)
                    .addComponent(rbtnLiquida))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        panelVentilacionLayout.setVerticalGroup(
            panelVentilacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelVentilacionLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(rbtnVentilador)
                .addGap(18, 18, 18)
                .addComponent(rbtnLiquida)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelRam.setBorder(javax.swing.BorderFactory.createTitledBorder("Memoria Ram"));
        panelRam.setEnabled(false);

        cmbRam.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "4 GB", "8 GB", "16 GB", "32 GB", "64 GB" }));
        cmbRam.setEnabled(false);

        javax.swing.GroupLayout panelRamLayout = new javax.swing.GroupLayout(panelRam);
        panelRam.setLayout(panelRamLayout);
        panelRamLayout.setHorizontalGroup(
            panelRamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRamLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cmbRam, 0, 94, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelRamLayout.setVerticalGroup(
            panelRamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRamLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(cmbRam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelAlmacenamiento.setBorder(javax.swing.BorderFactory.createTitledBorder("Tipo de almacenamiento"));
        panelAlmacenamiento.setEnabled(false);

        btnGroupEAlmacenamient.add(rbtnHDD);
        rbtnHDD.setText("Disco HDD");
        rbtnHDD.setEnabled(false);

        btnGroupEAlmacenamient.add(rbtnSSD);
        rbtnSSD.setText("Disco SSD");
        rbtnSSD.setEnabled(false);

        javax.swing.GroupLayout panelAlmacenamientoLayout = new javax.swing.GroupLayout(panelAlmacenamiento);
        panelAlmacenamiento.setLayout(panelAlmacenamientoLayout);
        panelAlmacenamientoLayout.setHorizontalGroup(
            panelAlmacenamientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAlmacenamientoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAlmacenamientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbtnHDD)
                    .addComponent(rbtnSSD))
                .addContainerGap(82, Short.MAX_VALUE))
        );
        panelAlmacenamientoLayout.setVerticalGroup(
            panelAlmacenamientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAlmacenamientoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rbtnHDD)
                .addGap(18, 18, 18)
                .addComponent(rbtnSSD)
                .addContainerGap(44, Short.MAX_VALUE))
        );

        panelFuente.setBorder(javax.swing.BorderFactory.createTitledBorder("Fuente de poder"));
        panelFuente.setEnabled(false);

        cmbFuente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "400 W", "500 W", "600 W", "700 W", "800 W", "1000 W" }));
        cmbFuente.setEnabled(false);

        javax.swing.GroupLayout panelFuenteLayout = new javax.swing.GroupLayout(panelFuente);
        panelFuente.setLayout(panelFuenteLayout);
        panelFuenteLayout.setHorizontalGroup(
            panelFuenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFuenteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cmbFuente, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );
        panelFuenteLayout.setVerticalGroup(
            panelFuenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFuenteLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(cmbFuente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        panelEProcesador1.setBorder(javax.swing.BorderFactory.createTitledBorder("Procesador AMD"));
        panelEProcesador1.setEnabled(false);

        btnGroupEProcesador.add(rbtnE7);
        rbtnE7.setText("Ryzen 7");
        rbtnE7.setEnabled(false);

        btnGroupEProcesador.add(rbtnE5);
        rbtnE5.setText("Ryzen 5");
        rbtnE5.setEnabled(false);

        btnGroupEProcesador.add(rbtnE9);
        rbtnE9.setText("Ryzen 9");
        rbtnE9.setEnabled(false);

        javax.swing.GroupLayout panelEProcesador1Layout = new javax.swing.GroupLayout(panelEProcesador1);
        panelEProcesador1.setLayout(panelEProcesador1Layout);
        panelEProcesador1Layout.setHorizontalGroup(
            panelEProcesador1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEProcesador1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelEProcesador1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbtnE7)
                    .addComponent(rbtnE5)
                    .addComponent(rbtnE9))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        panelEProcesador1Layout.setVerticalGroup(
            panelEProcesador1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEProcesador1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rbtnE9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbtnE7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbtnE5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelEProcesador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelFuente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelRam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelEProcesador1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelVentilacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelAlmacenamiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelEProcesador, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelEProcesador1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelAlmacenamiento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(panelFuente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(panelRam, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(panelVentilacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        cbxActivar3.setText("Activar");
        cbxActivar3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxActivar3ItemStateChanged(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Por piezas"));

        panelBateria.setBorder(javax.swing.BorderFactory.createTitledBorder("Bateria extraible"));
        panelBateria.setEnabled(false);

        btnGroupBateria.add(rbtnBSi);
        rbtnBSi.setText("Si");
        rbtnBSi.setEnabled(false);

        btnGroupBateria.add(rbtnBNo);
        rbtnBNo.setText("No");
        rbtnBNo.setToolTipText("");
        rbtnBNo.setEnabled(false);

        javax.swing.GroupLayout panelBateriaLayout = new javax.swing.GroupLayout(panelBateria);
        panelBateria.setLayout(panelBateriaLayout);
        panelBateriaLayout.setHorizontalGroup(
            panelBateriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBateriaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBateriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbtnBSi, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rbtnBNo, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        panelBateriaLayout.setVerticalGroup(
            panelBateriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBateriaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rbtnBSi)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbtnBNo)
                .addGap(33, 33, 33))
        );

        panelRamL.setBorder(javax.swing.BorderFactory.createTitledBorder("Memoria Ram"));
        panelRamL.setEnabled(false);

        cmbRAM.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "4 GB", "8 GB", "16 GB", "32 GB", "64 GB" }));
        cmbRAM.setEnabled(false);

        javax.swing.GroupLayout panelRamLLayout = new javax.swing.GroupLayout(panelRamL);
        panelRamL.setLayout(panelRamLLayout);
        panelRamLLayout.setHorizontalGroup(
            panelRamLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRamLLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cmbRAM, 0, 97, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelRamLLayout.setVerticalGroup(
            panelRamLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRamLLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(cmbRAM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        panelAlmacenamientoL.setBorder(javax.swing.BorderFactory.createTitledBorder("Tipo de almacenamiento"));
        panelAlmacenamientoL.setEnabled(false);

        btnGroupLAlmacenamiento.add(rbtnHDDL);
        rbtnHDDL.setText("Disco HDD");
        rbtnHDDL.setEnabled(false);

        btnGroupLAlmacenamiento.add(rbtnSSDL);
        rbtnSSDL.setText("Disco SSD");
        rbtnSSDL.setEnabled(false);

        javax.swing.GroupLayout panelAlmacenamientoLLayout = new javax.swing.GroupLayout(panelAlmacenamientoL);
        panelAlmacenamientoL.setLayout(panelAlmacenamientoLLayout);
        panelAlmacenamientoLLayout.setHorizontalGroup(
            panelAlmacenamientoLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAlmacenamientoLLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAlmacenamientoLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbtnHDDL)
                    .addComponent(rbtnSSDL))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        panelAlmacenamientoLLayout.setVerticalGroup(
            panelAlmacenamientoLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAlmacenamientoLLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rbtnHDDL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(rbtnSSDL)
                .addContainerGap())
        );

        panelLProcesador.setBorder(javax.swing.BorderFactory.createTitledBorder("Procesador"));
        panelLProcesador.setEnabled(false);

        btnGroupLProcesador.add(rbtnLi7);
        rbtnLi7.setText("i7");
        rbtnLi7.setEnabled(false);

        btnGroupLProcesador.add(rbtnLi5);
        rbtnLi5.setText("i5");
        rbtnLi5.setEnabled(false);

        btnGroupLProcesador.add(rbtnLi3);
        rbtnLi3.setText("i3");
        rbtnLi3.setEnabled(false);

        javax.swing.GroupLayout panelLProcesadorLayout = new javax.swing.GroupLayout(panelLProcesador);
        panelLProcesador.setLayout(panelLProcesadorLayout);
        panelLProcesadorLayout.setHorizontalGroup(
            panelLProcesadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLProcesadorLayout.createSequentialGroup()
                .addGroup(panelLProcesadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbtnLi7)
                    .addComponent(rbtnLi5)
                    .addComponent(rbtnLi3))
                .addGap(0, 40, Short.MAX_VALUE))
        );
        panelLProcesadorLayout.setVerticalGroup(
            panelLProcesadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLProcesadorLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rbtnLi7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbtnLi5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbtnLi3))
        );

        panelLProcesador1.setBorder(javax.swing.BorderFactory.createTitledBorder("Procesador AMD"));
        panelLProcesador1.setEnabled(false);

        btnGroupLProcesador.add(rbtnL7);
        rbtnL7.setText("Ryzen 7");
        rbtnL7.setEnabled(false);

        btnGroupLProcesador.add(rbtnL5);
        rbtnL5.setText("Ryzen 5");
        rbtnL5.setEnabled(false);

        btnGroupLProcesador.add(rbtnL9);
        rbtnL9.setText("Ryzen 9");
        rbtnL9.setEnabled(false);

        javax.swing.GroupLayout panelLProcesador1Layout = new javax.swing.GroupLayout(panelLProcesador1);
        panelLProcesador1.setLayout(panelLProcesador1Layout);
        panelLProcesador1Layout.setHorizontalGroup(
            panelLProcesador1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLProcesador1Layout.createSequentialGroup()
                .addGroup(panelLProcesador1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbtnL7)
                    .addComponent(rbtnL5)
                    .addComponent(rbtnL9))
                .addGap(0, 34, Short.MAX_VALUE))
        );
        panelLProcesador1Layout.setVerticalGroup(
            panelLProcesador1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLProcesador1Layout.createSequentialGroup()
                .addComponent(rbtnL9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rbtnL7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbtnL5)
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelLProcesador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelRamL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelBateria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(panelLProcesador1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(panelAlmacenamientoL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(113, 113, 113))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelLProcesador1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelLProcesador, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelAlmacenamientoL, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelRamL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelBateria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "PROVINCIA QUE DESEA BUSCAR", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        cmbProvincias.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "Azuay", "Guayas", "Loja", "Pichincha" }));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cmbProvincias, 0, 273, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cmbProvincias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnCotizar.setText("Crear Cotizacion");
        btnCotizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCotizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(btnInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cbxActivar3, javax.swing.GroupLayout.Alignment.LEADING))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(cbxActivar2)
                                    .addGap(439, 439, 439))
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(188, 188, 188)
                        .addComponent(btnCotizar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbxActivar2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxActivar3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCotizar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInicioActionPerformed
        GestionLogin nuevaVentana = new GestionLogin();
        nuevaVentana.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnInicioActionPerformed

    private void cbxActivar2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxActivar2ItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            rbtnEi7.setEnabled(true);
            rbtnEi5.setEnabled(true);
            rbtnEi3.setEnabled(true);
            panelEProcesador.setEnabled(true);
            rbtnVentilador.setEnabled(true);
            rbtnLiquida.setEnabled(true);
            panelVentilacion.setEnabled(true);
            panelRam.setEnabled(true);
            cmbRam.setEnabled(true);
            panelFuente.setEnabled(true);
            cmbFuente.setEnabled(true);
            panelAlmacenamiento.setEnabled(true);
            rbtnHDD.setEnabled(true);
            rbtnSSD.setEnabled(true);

            panelEProcesador1.setEnabled(true);
            rbtnE7.setEnabled(true);
            rbtnE5.setEnabled(true);
            rbtnE9.setEnabled(true);
        } else if (evt.getStateChange() == ItemEvent.DESELECTED) {
            rbtnEi7.setEnabled(false);
            rbtnEi5.setEnabled(false);
            rbtnEi3.setEnabled(false);
            panelEProcesador.setEnabled(false);
            rbtnVentilador.setEnabled(false);
            rbtnLiquida.setEnabled(false);
            panelVentilacion.setEnabled(false);
            panelRam.setEnabled(false);
            cmbRam.setEnabled(false);
            panelFuente.setEnabled(false);
            cmbFuente.setEnabled(false);
            panelAlmacenamiento.setEnabled(false);
            rbtnHDD.setEnabled(false);
            rbtnSSD.setEnabled(false);
            panelEProcesador1.setEnabled(false);
            rbtnE7.setEnabled(false);
            rbtnE5.setEnabled(false);
            rbtnE9.setEnabled(false);
        }
    }//GEN-LAST:event_cbxActivar2ItemStateChanged

    private void cbxActivar3ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxActivar3ItemStateChanged

        if (evt.getStateChange() == ItemEvent.SELECTED) {
            rbtnLi7.setEnabled(true);
            rbtnLi5.setEnabled(true);
            rbtnLi3.setEnabled(true);
            panelLProcesador.setEnabled(true);
            panelRamL.setEnabled(true);
            cmbRAM.setEnabled(true);
            panelAlmacenamientoL.setEnabled(true);
            rbtnHDDL.setEnabled(true);
            rbtnSSDL.setEnabled(true);

            panelLProcesador1.setEnabled(true);
            rbtnL7.setEnabled(true);
            rbtnL5.setEnabled(true);
            rbtnL9.setEnabled(true);

            panelBateria.setEnabled(true);
            rbtnBNo.setEnabled(true);
            rbtnBSi.setEnabled(true);
        } else if (evt.getStateChange() == ItemEvent.DESELECTED) {
            rbtnLi7.setEnabled(false);
            rbtnLi5.setEnabled(false);
            rbtnLi3.setEnabled(false);
            panelLProcesador.setEnabled(false);
            panelRamL.setEnabled(false);
            cmbRAM.setEnabled(false);
            panelAlmacenamientoL.setEnabled(false);
            rbtnHDDL.setEnabled(false);
            rbtnSSDL.setEnabled(false);
            panelLProcesador1.setEnabled(false);
            rbtnL7.setEnabled(false);
            rbtnL5.setEnabled(false);
            rbtnL9.setEnabled(false);

            panelBateria.setEnabled(false);
            rbtnBNo.setEnabled(false);
            rbtnBSi.setEnabled(false);
        }
    }//GEN-LAST:event_cbxActivar3ItemStateChanged

    private void btnCotizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCotizarActionPerformed
        if (cmbProvincias.getSelectedIndex() != 0) {
            String provincia = cmbProvincias.getSelectedItem().toString();
            boolean RAMESeleccionada = llenarERAM(provincia);
            boolean almacenamientoESeleccionado = llenarEAlmacenamiento(provincia);
            boolean procesadorESeleccionado = llenarEProcesador(provincia);
            boolean fuenteSeleccionada = llenarFuenteDePoder(provincia);
            boolean ventilacionSeleccionada = llenarVentilacion(provincia);
            
            boolean RAMLSeleccionada = llenarLRAM(provincia);
            boolean almacenamientoLSeleccionado = llenarLAlmacenamiento(provincia);
            boolean procesadorLSeleccionado = llenarLProcesador(provincia);
            
            boolean llenadoExitoso = RAMESeleccionada || RAMLSeleccionada || 
                    almacenamientoESeleccionado || almacenamientoLSeleccionado
                    || procesadorESeleccionado || procesadorLSeleccionado
                    || fuenteSeleccionada || ventilacionSeleccionada;
            
            if (!llenadoExitoso) {
                String warning = "No se ha seleccionado ningun campo";
                JOptionPane.showMessageDialog(rootPane, warning, "Advertencia", JOptionPane.WARNING_MESSAGE);
            } else {
                Set<Producto> set = new HashSet<>(productosDeseados);
                productosDeseados.clear();
                productosDeseados.addAll(set);
                GestionPresentacion nuevaVentana = new GestionPresentacion(productosDeseados);
                nuevaVentana.setVisible(true);
                this.setVisible(false);
            }
        } else {
            String error = "Seleccione una provincia";
            JOptionPane.showMessageDialog(rootPane, error, "Provincia no seleccionada", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnCotizarActionPerformed

    public boolean llenarERAM(String provincia) {
        String tipoComputador = "Escritorio";
        if (cmbRam.getSelectedIndex() != 0) {
            String caracteristica = cmbRam.getSelectedItem().toString();
            caracteristica = caracteristica.substring(0, 1);
            productosDeseados.addAll(Tiendas.obtenerProductos(tiendas, provincia, 1, caracteristica, tipoComputador));
            return true;
        } else {
            return false;
        }
    }

    public boolean llenarEAlmacenamiento(String provincia) {
        String tipoComputador = "Escritorio";
        if (rbtnSSD.isSelected()) {
            productosDeseados.addAll(Tiendas.obtenerProductos(tiendas, provincia, 2, "SSD", tipoComputador));
            return true;
        } else if (rbtnHDD.isSelected()) {
            productosDeseados.addAll(Tiendas.obtenerProductos(tiendas, provincia, 2, "HDD", tipoComputador));
            return true;
        } else {
            return false;
        }
    }

    public boolean llenarEProcesador(String provincia) {
        String tipoComputador = "Escritorio";
        if (rbtnEi3.isSelected()) {
            productosDeseados.addAll(Tiendas.obtenerProductos(tiendas, provincia, 3, "i3", tipoComputador));
            return true;
        }
        if (rbtnEi5.isSelected()) {
            productosDeseados.addAll(Tiendas.obtenerProductos(tiendas, provincia, 3, "i5", tipoComputador));
            return true;
        }
        if (rbtnEi7.isSelected()) {
            productosDeseados.addAll(Tiendas.obtenerProductos(tiendas, provincia, 3, "i7", tipoComputador));
            return true;
        }
        if (rbtnE5.isSelected()) {
            productosDeseados.addAll(Tiendas.obtenerProductos(tiendas, provincia, 3, "5", tipoComputador));
            return true;
        }
        if (rbtnE7.isSelected()) {
            productosDeseados.addAll(Tiendas.obtenerProductos(tiendas, provincia, 3, "7", tipoComputador));
            return true;
        }
        if (rbtnE9.isSelected()) {
            productosDeseados.addAll(Tiendas.obtenerProductos(tiendas, provincia, 3, "9", tipoComputador));
            return true;
        }
        return false;
    }

    public boolean llenarFuenteDePoder(String provincia) {
        String tipoComputador = "Escritorio";
        if (cmbFuente.getSelectedIndex() == 0) {
            return false;
        }
        String fuente = cmbFuente.getSelectedItem().toString();
        productosDeseados.addAll(Tiendas.obtenerProductos(tiendas, provincia, 4, fuente, tipoComputador));
        return true;
    }

    public boolean llenarVentilacion(String provincia) {
        String tipoComputador = "Escritorio";
        if (rbtnLiquida.isSelected()) {
            productosDeseados.addAll(Tiendas.obtenerProductos(tiendas, provincia, 5, "Liquida", tipoComputador));
            return true;
        }
        if (rbtnVentilador.isSelected()) {
            productosDeseados.addAll(Tiendas.obtenerProductos(tiendas, provincia, 5, "Standard", tipoComputador));
            return true;
        }
        return false;
    }

    public boolean llenarLRAM(String provincia) {
        String tipoComputador = "Laptop";
        if (cmbRAM.getSelectedIndex() != 0) {
            String caracteristica = cmbRAM.getSelectedItem().toString();
            caracteristica = caracteristica.substring(0, 1);
            productosDeseados.addAll(Tiendas.obtenerProductos(tiendas, provincia, 1, caracteristica, tipoComputador));
            return true;
        } else {
            return false;
        }
    }

    public boolean llenarLAlmacenamiento(String provincia) {
        String tipoComputador = "Laptop";
        if (rbtnSSDL.isSelected()) {
            productosDeseados.addAll(Tiendas.obtenerProductos(tiendas, provincia, 2, "SSD", tipoComputador));
            return true;
        } else if (rbtnHDDL.isSelected()) {
            productosDeseados.addAll(Tiendas.obtenerProductos(tiendas, provincia, 2, "HDD", tipoComputador));
            return true;
        } else {
            return false;
        }
    }

    public boolean llenarLProcesador(String provincia) {
        String tipoComputador = "Laptop";
        if (rbtnLi3.isSelected()) {
            productosDeseados.addAll(Tiendas.obtenerProductos(tiendas, provincia, 3, "i3", tipoComputador));
            return true;
        }
        if (rbtnLi5.isSelected()) {
            productosDeseados.addAll(Tiendas.obtenerProductos(tiendas, provincia, 3, "i5", tipoComputador));
            return true;
        }
        if (rbtnLi7.isSelected()) {
            productosDeseados.addAll(Tiendas.obtenerProductos(tiendas, provincia, 3, "i7", tipoComputador));
            return true;
        }
        if (rbtnL5.isSelected()) {
            productosDeseados.addAll(Tiendas.obtenerProductos(tiendas, provincia, 3, "5", tipoComputador));
            return true;
        }
        if (rbtnL7.isSelected()) {
            productosDeseados.addAll(Tiendas.obtenerProductos(tiendas, provincia, 3, "7", tipoComputador));
            return true;
        }
        if (rbtnL9.isSelected()) {
            productosDeseados.addAll(Tiendas.obtenerProductos(tiendas, provincia, 3, "9", tipoComputador));
            return true;
        }
        return false;
    }

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(GestionAmbas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(GestionAmbas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(GestionAmbas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(GestionAmbas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new GestionAmbas().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCotizar;
    private javax.swing.ButtonGroup btnGroupBateria;
    private javax.swing.ButtonGroup btnGroupEAlmacenamient;
    private javax.swing.ButtonGroup btnGroupEProcesador;
    private javax.swing.ButtonGroup btnGroupLAlmacenamiento;
    private javax.swing.ButtonGroup btnGroupLProcesador;
    private javax.swing.ButtonGroup btnGroupVentilacion;
    private javax.swing.JButton btnInicio;
    private javax.swing.JCheckBox cbxActivar2;
    private javax.swing.JCheckBox cbxActivar3;
    private javax.swing.JComboBox<String> cmbFuente;
    private javax.swing.JComboBox<String> cmbProvincias;
    private javax.swing.JComboBox<String> cmbRAM;
    private javax.swing.JComboBox<String> cmbRam;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel panelAlmacenamiento;
    private javax.swing.JPanel panelAlmacenamientoL;
    private javax.swing.JPanel panelBateria;
    private javax.swing.JPanel panelEProcesador;
    private javax.swing.JPanel panelEProcesador1;
    private javax.swing.JPanel panelFuente;
    private javax.swing.JPanel panelLProcesador;
    private javax.swing.JPanel panelLProcesador1;
    private javax.swing.JPanel panelRam;
    private javax.swing.JPanel panelRamL;
    private javax.swing.JPanel panelVentilacion;
    private javax.swing.JRadioButton rbtnBNo;
    private javax.swing.JRadioButton rbtnBSi;
    private javax.swing.JRadioButton rbtnE5;
    private javax.swing.JRadioButton rbtnE7;
    private javax.swing.JRadioButton rbtnE9;
    private javax.swing.JRadioButton rbtnEi3;
    private javax.swing.JRadioButton rbtnEi5;
    private javax.swing.JRadioButton rbtnEi7;
    private javax.swing.JRadioButton rbtnHDD;
    private javax.swing.JRadioButton rbtnHDDL;
    private javax.swing.JRadioButton rbtnL5;
    private javax.swing.JRadioButton rbtnL7;
    private javax.swing.JRadioButton rbtnL9;
    private javax.swing.JRadioButton rbtnLi3;
    private javax.swing.JRadioButton rbtnLi5;
    private javax.swing.JRadioButton rbtnLi7;
    private javax.swing.JRadioButton rbtnLiquida;
    private javax.swing.JRadioButton rbtnSSD;
    private javax.swing.JRadioButton rbtnSSDL;
    private javax.swing.JRadioButton rbtnVentilador;
    // End of variables declaration//GEN-END:variables
}
